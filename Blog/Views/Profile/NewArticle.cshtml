@using Blog.Models
@model Article
@{
    ViewBag.Title = "My Articles";
}


@section styles{

    <style>
        .cat {
            display: flex;
            justify-content: center;
        }

        .opt {
            width: 20em;
            height: 20em;
        }

        .container {
            margin: auto;
            background-color: white;
        }

        .chkbox {
            display: flex;
            align-items: baseline;
        }

        .loginh4 {
            padding-top: 40px;
            margin-top: 0px
        }
    </style>


}

<div class="container">

    <section class="row narrow section-intro add-bottom text-center" id="">
        <h3 class="loginh4">New Article</h3>
        <hr />
        @using (Html.BeginForm("NewArticle", "Profile", FormMethod.Post, new { enctype = "multipart/form-data", id = "frm" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(x => x.Id)
            @Html.LabelFor(x => x.Title, new { @class = "loginh4" })
            @Html.TextBoxFor(x => x.Title, new { @class = "full-width" })
            @Html.ValidationMessageFor(x => x.Title, null, new { style = "color:red" })


            @Html.LabelFor(x => x.Summary)
            @Html.TextAreaFor(x => x.Summary, new { @class = "full-width", placeholder = "Create an impressive summary for your article.", maxlength = 200 })
            @Html.ValidationMessageFor(x => x.Summary, null, new { style = "color:red" })

            @Html.Label("Categories")
            <div class="cat">
                @Html.ListBox("cats", (MultiSelectList)ViewBag.cats, new { @class = "opt" })
            </div>

            @Html.LabelFor(x => x.Content)
            @Html.TextAreaFor(x => x.Content, new { @class = "full-width", id = "summernote" })
            @Html.ValidationMessageFor(x => x.Content, null, new { style = "color:red" })

            @Html.Label("Image")
            @Html.TextBox("file", null, new { type = "file" })

            <input class="btn--primary full-width" type="submit" onclick="myFunction()" value="Submit">
        }

    </section>

</div>

@section scripts{
    <script>
        $('option').mousedown(function (e) {
            e.preventDefault();
            $(this).prop('selected', !$(this).prop('selected'));
            return false;
        });

        var lst = $("#frm")
        function myFunction() {
            if (!lst.valid()) {
                event.preventDefault();
                toastr.error("You must fill all fields and choose category!");
            }
            if ($("#summernote").val().length < 500) {
                event.preventDefault();
                toastr.error("Content must be longer than 500 characters!");
            }

        };
    </script>
    <script src="https://code.jquery.com/jquery-3.4.1.slim.min.js" integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n" crossorigin="anonymous"></script>
    <link href="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote-lite.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote-lite.min.js"></script>
    <script>
        $('#summernote').summernote({
            placeholder: 'Hello stand alone ui',
            tabsize: 2,
            height: 520,
            toolbar: [
                ['style', ['style']],
                ['font', ['bold', 'underline', 'clear']],
                ['color', ['color']],
                ['para', ['ul', 'ol', 'paragraph']],
                ['table', ['table']],
                ['insert', ['link', 'picture', 'video']],
                ['view', ['fullscreen', 'codeview', 'help']]
            ]
        });
        $('#summernote').summernote({ dialogsInBody: true });

    </script>
}