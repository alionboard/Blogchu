@model List<ApplicationUser>
@{
    ViewBag.Title = "Users";
    List<Article> articles = ViewBag.Articles;

}

<div class="row tm-content-row tm-mt-big">
    <div class="col-xl-12 col-lg-12 tm-md-12 tm-sm-12 tm-col">
        <div class="bg-white tm-block h-100">
            <div class="row">
                <div class="col-md-12 col-sm-12">
                    <h2 class="tm-block-title d-inline-block">Users</h2>
                </div>
            </div>
            <div class="table-responsive">
                <table class="table table-hover table-striped tm-table-striped-even mt-3" id="myTable">
                    <thead>
                        <tr class="tm-bg-gray">
                            <th scope="col">Email</th>
                            <th scope="col">Username</th>
                            <th scope="col">#Article</th>
                            <th scope="col">Role</th>
                            <th scope="col">isAdmin</th>
                            <th scope="col">&nbsp;</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model)
                        {
                            <tr>
                                <td>@user.Email</td>
                                <td>@user.Nickname</td>
                                <td>@articles.Count(x => x.ApplicationUserId == user.Id)</td>
                                <td>@(user.Roles.Any()?"admin":"user")</td>
                                <td>
                                    @using (Html.BeginForm("AssignRole", "User", FormMethod.Post))
                                    {
                                        @Html.AntiForgeryToken()
                                        @Html.Hidden("userId", user.Id)
                                        @Html.CheckBox("isAdmin", user.Roles.Any(x=>x.UserId==user.Id), new { id = "isAdmin-" + user.Id })
                                        
                                    }
                                </td>
                                <td>
                                    @using (Html.BeginForm("DeleteUser", "User", FormMethod.Post))
                                    {
                                        @Html.AntiForgeryToken()
                                        @Html.Hidden("userId", user.Id)
                                        <button><i class="fas fa-trash-alt tm-trash-icon"></i></button>
                                    }
                                </td>

                            </tr>
                        }
                    </tbody>
                </table>
            </div>

        </div>
    </div>
</div>


@*@helper RoleName(ApplicationUser user)
    {
        string roleId = user.Roles.Select(x => x.RoleId).FirstOrDefault();
        if (roleId != null)
        {
            List<IdentityRole> identityRoles = ViewBag.Roles as List<IdentityRole>;
            @identityRoles.FirstOrDefault(x => x.Id == roleId).Name;
        }
        else
        {
            string notAdmin = "user";
            @notAdmin;
        }

    }*@


@section scripts{
    <link rel="stylesheet" href="sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

    <script>
        $(document).ready(function () {
            $('#myTable').DataTable({ "order": [[3, "asc"]] });
        });
    </script>
    <script>

        $("input:checkbox[name='isAdmin']").change(function () {

            Swal.fire({
                title: 'Are you sure?',
                text: "Admin status is about to be changed!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, do it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $(this).closest("form").submit();
                }
                else {
                    $(this).prop('checked', false);
                }
            })
        });

    </script>


    <script>

        var result = "@TempData["result"]";
        switch (result) {
            case "failed":
                toastr.error("Error occurred while deleting user!")
                break;
            case "deleteAdminError":
                toastr.error("Admin can not be deleted!")
                break;
            case "succeed":
                toastr.success("User deleted successfully!")
                break;
            case "onlyAdmin":
                toastr.error("The system must have at least one admin!")
                break;
            case "roleFailed":
                toastr.error("Error occurred while assigning role!")
                break;
            case "roleUnassigned":
                toastr.success("Role unassigned successfully!")
                break;
            case "roleAssigned":
                toastr.success("Role assigned successfully!")
                break;

        }
    </script>

}